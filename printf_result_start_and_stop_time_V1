#include <stdio.h>
#include <string.h>
#include <io.h> //c_file
#include <direct.h> 
#include <stdlib.h>

int main(){
  char sdir[256], filter[256], current_path[256];
  struct _finddata_t c_file;
  long hFile;
  
  //getcwd(current_path, 256);
  strcpy( sdir, "C:\\Nemo Tools\\Results" );
  //printf("Path: %s\n\n", sdir);
  
  printf("這個檔案會搜尋 Results 資料夾內所有包含關鍵字的 .1.nmf 檔\n輸入關鍵字: ");
  *filter = '*';
  gets(filter + 1);
  strcat(filter, "*.1.nmf" );
  //printf("%s\n", filter);

  _chdir( sdir );
  hFile = _findfirst(filter, &c_file);
  if( hFile!=-1 )
  {
    do{
     //sprintf( current_path, "%s\\%s", sdir, c_file.name );
     //printf( "Open %s\n", c_file.name );
     char Getline[2048], flag = 0;
     
     FILE *pt_c_filename;
     pt_c_filename = fopen(c_file.name, "r");     
     if(pt_c_filename != NULL)
     {
     	printf("Open %s\n", c_file.name);
     	//------------Start read nemo logfile----------
     	while(!feof(pt_c_filename))
     	{
     		fgets(Getline, 2048, pt_c_filename);
     		switch (flag)
     		{
     			case 0:
     				if(strncmp(Getline, "#START", 6) == 0)
     				{
     					printf("%s", Getline);
     					flag = 1;
					}
					break;
				case 1:
					if(strncmp(Getline, "#STOP", 5) == 0)
					{
						printf("%s\n", Getline);
						flag = 2;
					}
					break;
			}
		}
     	//------------End   read nemo logfile----------
     	fclose(pt_c_filename);
	 }
	 else
	 {
	 	printf("Open %s fail.\n", c_file.name);
	 }
    }while( _findnext( hFile, &c_file )==0 );	
  }
  else
  {
  	printf("Cannot find any match nmf logfile.\n");
  }
  system("pause");
	return 0;
}
